
** busca alguma raiz para n, no intervalo [min; max]
proc buscaRaizDe(n - float)entre(min - float)e(max - float) - float {
    var dif - float;
    var raiz - float;

    raiz := (min+max) / 2.0;  						**proposta de raiz: metade do max e min
    dif := (raiz*raiz) - n;   						**para testar se, com esta suposta raiz, o resultado da maior/menor/igual 

    if ((dif >= -0.0001) and (dif <= 0.0001)) {  	**testa se deu igual, com margem de erro de 4 digitos
        return raiz;
    } else if (dif < 0) { 							**a raiz eh menor do que deveria
        return buscaRaizDe(n)entre(raiz)e(max);  	**busca uma maior
    } else {
        return buscaRaizDe(n)entre(min)e(raiz);  	**busca uma menor
    }
}

proc raizDe(n - float) - float {
    if ((n = 0.0) or (n = 1.0)) {
        return n;
    } else {
        return buscaRaizDe(n)entre(0)e(n);
    }
}

proc main() {
    var i - int;
    i := 0;
    while (i <= 10) {
        prnt('r', 'a', 'i', 'z', ' ');
        prnt(i);
        prnt(' '); prnt(':'); prnt(' ');
        prnt( raizDe(i) );
        prnt('\n');
    }
}

